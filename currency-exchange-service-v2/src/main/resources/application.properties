# Config name and port for this application
spring.application.name=currency-exchange-service
server.port=8000

# spring cloud server config
#spring.cloud.config.profile=dev
spring.config.import=optional:configserver:http://localhost:8888

# config h2
spring.jpa.show-sql=true
spring.h2.console.enabled=true
spring.datasource.url=jdbc:h2:mem:testdb

# By default, data.sql / schema.sql scripts are now run before Hibernate is initialized.
# This aligns the behaviour of basic script-based initialization with that of Flyway and Liquibase.
# --> table not exist
spring.jpa.defer-datasource-initialization=true

# configure eureka naming server address to register this application to eureka server
eureka.client.service-url.default-zone=http://localhost:8761/eureka

##################### configuring resilience4j ####################
# retry attempts, max 5 attempts.
resilience4j.retry.instances.default-strategy.maxAttempts=5
# config circuit breaker - setting waits before each retry (if failed - next attempts will be 2, 4 ...).
resilience4j.retry.instances.default-strategy.wait-duration=1s
resilience4j.retry.instances.default-strategy.enable-exponential-backoff=true
# config rate limit - in 10 secs, only allow 100 calls. When limit is reached - return 500 - RequestNotPermitted.
resilience4j.ratelimiter.instances.default.limitForPeriod=100
resilience4j.ratelimiter.instances.default.limitRefreshPeriod=10s
# config bulkhead - setting maximum concurrent calls
resilience4j.bulkhead.instances.default.maxConcurrentCalls=20


###################### config zipkin #######################
# config to trace every requests (for dev environment, we can trace 10% or 5% requests -> 0.1 / 0.05)
spring.zipkin.base-url=http://localhost:9411
spring.sleuth.sampler.probability=1.0